
Week 0 - Directory issue needs to be fixed for storing audio recordings
		-ESP32 transmits data wirelessly and through serial but I can't find where it is stored
		

testing testing

----------------------------------------------------------------

Week 1 - Still working on audio recording, I was approaching serial recording of the audio incorrectly and was informed by my sponsor
to avoid the wifi communication between the host computer (PI or PC) and the esp32 and to instead focus on sending serialized JSON packets
that will then be decoded by the host computer, written to a local file, and then stored in the MongoDB database on the same computer.
		-This past week I have found resources on JSON packet serialization and methods to send audio through these JSON packets

Goals to have complete by next week
	-Be able to send a serialized packet containing variables for audio recording bytes, and hardware information received by AMy's
	hardware subsystem and have those packets written to a file
	
----------------------------------------------------------------

Week 2 - got audio transmitting, need to work on receiving and writing the uint8_t data to a file

Goals to be complete by next week
	-Assist testing PCB ver A to ensure a quick turn around
	-have host machine upload file to database after writing file
	-begin intergrating code for state machine into current data transfer and audio recording code so that we can begin debugging code
	-continue testing minimum requirements for host PC

----------------------------------------------------------------

Week 3 - 
Audio Files:
	Audio files write to a given directory, the audio being recorded is very very poor, I need to work on getting it cleaner
	by changing data types of what I am transferring the audio as or by using a capacitor or LDO to catch fluctuations in the ESP32 3.3V
	input into the microphone

	I also tested the microphone I had been using and it had a very poor signal, I believe this was due to the jumper wires I used to
	create a connection between the microphone board and the bread board, I have switched to test pins that have a better solder connection
	in hopes that this reduces any distortion caused by poor connections

	I then put the microphone and recording subsystems on hold as I began to help Amy with the hardware subsystem and the CID/CWID code,
	this then took up the rest of the time between this weeks lab meeting and last weeks lab meeting.

Integrating Amy's code and my code/Helping test the PCB version A for fastest turnaround:
	Amy and I were in lab, Tuesday, Wednesday, and Thursday, achieving progress soldering additional loose components to the boards on Tuesday
	, then making progress on the CID and CWID code, updating it from ESP8266 libraries to ESP32 libraries, it now is able to be loaded onto the 
	ESP32 without issues and we have identified the functions that need to be modified. Thursday Amy and I began testing the boards
	we made some progress over the course of 2-2.5 hours and then messaged our sponsor with questions so that we could address them in lab.

	Friday, the day of the lab, all three of us were able to begin testing the boards, we discovered several things that can be improved on next
	iteration, and talked about the addition of test pins to improve the quality of our testing and lessen the amount of time we need in order to
	prepare to test the boards.

Testing minimum PC specs:
	This involved me less than the other two, Matthew ran tests again on the speed of the raspberry pi and I assisted in uploading the MongoDB
	code in order to test both of those in tandem to see the effect on performance.

Goals to be complete by next week
	-Continue testing PCB and ensure that it is functioning properly and assist in finding things that need to be changed
	-Get OBI working on school wifi, ensure that our subscription to VOIP service has been processed
	-Receive an incoming call on the OBI, and route the call through the test boards to see the effects it has/discover issues in the board before
		the next iteration.
	-Change the data type I am sending information to the wave file in
