"""
Used for demo purposes.
Clean the files made by DemoAudioSplit.py to show during demo that
DemoAudioSplit.py works as intended and splits .wav files
"""

import os
import glob

# dirs: directory where the files to train the SVM are located
dirs = ["speakers/Amy/", "speakers/Scott/", "speakers/Matthew/"]
# testDirs: directory where the files to test the SVM are located
testDirs = ["speakers/Amy/filesToTest/", "speakers/Scott/filesToTest/", "speakers/Matthew/filesToTest/"]


# function for deleting files generated by DemoAudioSplit.py
def pruneFolder(d):
    file = glob.glob(d + "*.wav")
    # print("\nTest files: ", file)  # test prints
    for f in file:
        # print("\nIn for f in file: ")
        # print("\nf: ", f)

        # filenames are known and hardcoded for demo purposes
        # TODO put these files in a different directory and change the extraction method (extract to another directory)
        # TODO for 404 code optimization
        if f == "speakers/Scott/filesToTest\Scott_Test.wav":
            print(f, "is a protected file, moving on\n")
        elif f == "speakers/Amy/filesToTest\Amy_Test.wav":
            print(f, "is a protected file, moving on\n")
        elif f == "speakers/Matthew/filesToTest\Matthew_Test.wav":
            print(f, "is a protected file, moving on\n")
        elif f == "speakers/Amy\Amy_Orig.wav":
            print(f, "is a protected file, moving on\n")
        elif f == "speakers/Scott\Scott_Orig.wav":
            print(f, "is a protected file, moving on\n")
        elif f == "speakers/Matthew\Matthew_Orig.wav":
            print(f, "is a protected file, moving on\n")
        else:
            os.remove(f)  # remove the file if it is not one of the protected files


# clean training files
for d in dirs:
    pruneFolder(d)  # remove extra files in dirs directories

# clean test files
for d in testDirs:
    pruneFolder(d)  # remove extra files in testDirs directories
